# Бінарний пошук
def binary_search(array,item):
  start = 0 # Перший елемент
  high = len(array) - 1 # Останній елемент
  while start <= high:
    mid = (start + high) // 2 # Знаходимо середній індекс
    guess = array[mid] # Знаходимо елемент у масиві за середнім індексом
    # Якщо знайдений елемент дорівнює шуканому то повертаємо індекс середнього елемента.
    if guess == item:
      return mid
    # Якщо знайдений елемент більше за шуканий, зменшуємо верхню межу області пошуку до індексу середнього елемента мінус один.
    if guess > item:
      high = mid - 1
    # Якщо знайдений елемент менший за шуканий, збільшуємо нижню межу області пошуку до індексу середнього елемента плюс один.
    else:
      start = mid + 1
  return None # Якщо не знайшли шуканий елемент повертаємо None

# Простий пошук
def simple_search(array, item):
  length = len(array)  # Отримуємо довжину масиву
  for index in range(length):  # Проходимо по індексам від 0 до length-1
    if array[index] == item:  # Порівнюємо поточний елемент з шуканим
      return index  # Якщо знайшли шуканий елемент, повертаємо його індекс
  return None  # Якщо не знайшли шуканий елемент, повертаємо None

myArray= [1,2,4,5,6,7,8,9,12] # Мій масив
# Шукає значення 8 бінарним пошуком
print(binary_search(myArray,8)) # 6
# Шукає значення 5 простим пошуком
print(simple_search(myArray,5)) # 3
# Шукає значення -4 бінарним пошуком
print(binary_search(myArray,-4)) # None
# Шукає значення 13 простим пошуком
print(simple_search(myArray,13)) # None